"""
This type stub file was generated by pyright.
"""

from typing import Callable, List, Optional, Union
from .pytgcalls import PyTgCalls
from .types import ChatUpdate, GroupCallParticipant, Update

class Filter:
    async def __call__(self, client: PyTgCalls, update: Update):
        ...
    
    def __invert__(self): # -> InvertFilter:
        ...
    
    def __and__(self, other): # -> AndFilter:
        ...
    
    def __or__(self, other): # -> OrFilter:
        ...
    


class InvertFilter(Filter):
    def __init__(self, base) -> None:
        ...
    
    async def __call__(self, client: PyTgCalls, update: Update): # -> bool:
        ...
    


class AndFilter(Filter):
    def __init__(self, base, other) -> None:
        ...
    
    async def __call__(self, client: PyTgCalls, update: Update): # -> Literal[False]:
        ...
    


class OrFilter(Filter):
    def __init__(self, base, other) -> None:
        ...
    
    async def __call__(self, client: PyTgCalls, update: Update): # -> Literal[True]:
        ...
    


CUSTOM_FILTER_NAME = ...
def create(func: Callable, name: Optional[str] = ..., **kwargs) -> Filter:
    ...

me = ...
stream_end = ...
class chat(Filter, set):
    def __init__(self, chats: Optional[Union[int, str, List[Union[int, str]]]] = ...) -> None:
        ...
    
    async def __call__(self, client: PyTgCalls, update: Update): # -> bool:
        ...
    


class chat_update(Filter):
    def __init__(self, flags: ChatUpdate.Status) -> None:
        ...
    
    async def __call__(self, client: PyTgCalls, update: Update): # -> Status | Literal[False]:
        ...
    


class call_participant(Filter):
    def __init__(self, flags: Optional[GroupCallParticipant.Action] = ...) -> None:
        ...
    
    async def __call__(self, client: PyTgCalls, update: Update): # -> Action | bool:
        ...
    


